<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

    <import resource="classpath:ks-data-dictionary-services-configuration.xml" />
    <import resource="classpath:ks-data-dictionary-validator-configuration.xml" />
    <!-- Add the myplan data dictionaries -->
    <import resource="classpath:ks-degree-audit-data-dictionary-services-configuration.xml" />
    <import resource="classpath:ks-academic-plan-data-dictionary-services-configuration.xml" />
    <import resource="classpath:ks-academic-plan-daos.xml" />

    <!-- Infrastructure code which handles invocation for all service impls -->
    <bean id="layeringAspects" class="org.kuali.student.enrollment.class1.lpr.service.aspect.ServiceAspects">
        <property name="includeThrowableClassList">
            <list>
                <ref bean="kualiInvalidParamException" />
                <ref bean="kualiReadOnlyException" />
                <ref bean="kualiOperationFailedException" />
            </list>
        </property>
    </bean>

    <!-- declare all service exceptions here or in KS core -->
    <bean id="kualiInvalidParamException" class="org.kuali.student.r2.common.exceptions.InvalidParameterException" />
    <bean id="kualiOperationFailedException" class="org.kuali.student.r2.common.exceptions.OperationFailedException" />
    <bean id="kualiReadOnlyException" class="org.kuali.student.r2.common.exceptions.ReadOnlyException" />

    <!-- Academic Plan Service -->
    <bean id="academicPlanServicePersistence" class="org.kuali.student.myplan.academicplan.service.AcademicPlanServiceImpl">
        <property name="searchManager" ref="acadPlanSearchManager"/>
        <property name="learningPlanDao" ref="learningPlanDao"/>
        <property name="learningPlanTypeDao" ref="learningPlanTypeDao"/>
        <property name="planItemDao" ref="planItemDao"/>
        <property name="planItemTypeDao" ref="planItemTypeDao"/>
        <!-- <property name="courseService" ref="courseService" /> -->
    </bean>

    <bean id="acadPlanSearchManager"
          class="org.kuali.student.r2.common.class1.search.SearchManagerImpl">
        <constructor-arg index="0"
                         value="classpath:myplan-plansearch-config.xml"/>
        <property name="dao" ref="acadSearchableDao"/>
    </bean>
    <bean id="acadSearchableDao"
          class="org.kuali.student.r2.common.dao.impl.SearchableCrudDaoImpl">
        <property name="em" ref="acadEntityManager"/>
    </bean>
    <bean id="acadEntityManager"
          class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="acadEntityManagerFactory"/>
    </bean>
    <bean id="acadEntityManagerFactory" parent="defaultEntityManagerFactory">
        <property name="persistenceUnitName" value="LearningPlan"/>
        <property name="persistenceXmlLocation" value="classpath:META-INF/lp-persistence.xml"/>
        <property name="dataSource" ref="myplanDataSourceXAPool"/>
    </bean>

    <bean id="defaultEntityManagerFactory" abstract="true"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="jpaVendorAdapter">
            <bean
                    class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="${ks.myplan.jpa.DatabasePlatform}"/>
                <property name="showSql" value="${ks.myplan.jpa.showSql}"/>
                <property name="generateDdl" value="${ks.myplan.jpa.generateDdl}"/>
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.transaction.manager_lookup_class"
                       value="${ks.myplan.jpa.JpaProperties.hibernate.transaction.manager_lookup_class}"/>
                <entry key="hibernate.hbm2ddl.auto"
                       value="${ks.myplan.jpa.JpaProperties.hibernate.hbm2ddl.auto}"/>
                <entry key="hibernate.connection.release_mode"
                       value="${ks.myplan.jpa.JpaProperties.hibernate.connection.release_mode}"/>
            </map>
        </property>
    </bean>

    <bean id="myplanDataSourceXAPool"
          class="org.kuali.rice.core.framework.persistence.jdbc.datasource.XAPoolDataSource">
        <property name="transactionManager" ref="transactionManagerXAPool"/>
        <property name="driverClassName" value="${ks.myplan.datasource.driver.name}"/>
        <property name="url" value="${ks.myplan.datasource.url}"/>
        <property name="maxSize" value="${ks.myplan.datasource.maxSize}"/>
        <property name="minSize" value="${ks.myplan.datasource.minSize}"/>
        <property name="maxWait" value="${ks.myplan.datasource.maxWait}"/>
        <property name="validationQuery" value="${ks.myplan.datasource.validationQuery}"/>
        <property name="username" value="${ks.myplan.datasource.username}"/>
        <property name="password" value="${ks.myplan.datasource.password}"/>
    </bean>

    <bean id="transactionManagerXAPool" class="org.springframework.transaction.jta.JotmFactoryBean">
        <property name="defaultTimeout" value="${transaction.timeout}"/>
    </bean>

    <!-- Academic Plan Service Decorators -->
    <bean id="academicPlanServiceValidator" class="org.kuali.student.myplan.academicplan.service.AcademicPlanServiceValidationDecorator">
        <property name="nextDecorator" ref="academicPlanServicePersistence" />
        <property name="validator" ref="validator"/>
        <property name="dataDictionaryService" ref="dataDictionaryServiceForAcademicPlanService"/>
    </bean>

    <alias name="academicPlanServiceValidator" alias="academicPlanService" />

    <!--  Wait on authorization decorator for now.
    <bean id="permissionService" class="org.kuali.rice.kim.service.impl.PermissionServiceImpl" />

    <bean id="academicPlanService"
            class="org.kuali.student.myplan.service.AcademicPlanServiceAuthorizationDecorator">
        <property name="nextDecorator" ref="academicPlanServiceValidation" />
        <property name="permissionService" ref="permissionService" />
    </bean>
  -->
</beans>
