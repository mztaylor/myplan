<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2010 The Kuali Foundation Licensed under the Educational Community License, Version 2.0 (the "License"); you 
  may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.osedu.org/licenses/ECL-2.0 
  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS 
  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language 
  governing permissions and limitations under the License. -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- This context requires that a spring Transaction Manager named 'transactionManager' be defined -->
    <import resource="classpath:ks-data-dictionary-services-configuration.xml"/>
    <import resource="classpath:ks-data-dictionary-validator-configuration.xml"/>
    <!-- Add the myplan data dictionaries -->
    <import resource="classpath:ks-academic-plan-data-dictionary-services-configuration.xml"/>
    <import resource="classpath:ks-academic-plan-daos.xml"/>

    <!-- JTA -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="myplanDataSource" class="org.kuali.rice.student.core.database.DerbyXAPoolDataSource">
        <property name="transactionManager" ref="userTransaction"/>
        <property name="driverClassName" value="${ks.myplan.datasource.driver.name}"/>
        <property name="maxSize" value="${ks.myplan.datasource.maxSize}"/>
        <property name="minSize" value="${ks.myplan.datasource.minSize}"/>
        <property name="maxWait" value="${ks.myplan.datasource.maxWait}"/>
        <property name="validationQuery" value="${ks.myplan.datasource.validationQuery}"/>
        <property name="url" value="${ks.myplan.datasource.url}"/>
        <property name="username" value="${ks.myplan.datasource.username}"/>
        <property name="password" value="${ks.myplan.datasource.password}"/>
    </bean>

    <bean id="academicPlanService" class="org.kuali.student.myplan.academicplan.service.AcademicPlanServiceImpl">
        <property name="searchManager" ref="acadPlanSearchManager"/>
        <property name="learningPlanDao" ref="learningPlanDao"/>
        <property name="learningPlanTypeDao" ref="learningPlanTypeDao"/>
        <property name="planItemDao" ref="planItemDao"/>
        <property name="planItemTypeDao" ref="planItemTypeDao"/>
    </bean>

    <!--<bean id="acadPlanSearchManager"
          class="org.kuali.student.r2.common.class1.search.SearchManagerImpl">
        <constructor-arg index="0"
                         value="classpath:lu-search-config.xml"/>
        <property name="crossSearchManager" ref="acadPlanCrossServiceSearchManager"/>
    </bean>

    <bean id="acadPlanCrossServiceSearchManager"
          class="org.kuali.student.r2.common.class1.search.CrossSearchManager">
        <property name="searchDispatcher" ref="lumSearchDispatcher"/>
    </bean>-->

    <bean id="acadPlanSearchManager"
          class="org.kuali.student.r2.common.class1.search.SearchManagerImpl">
        <constructor-arg index="0"
                         value="classpath:myplan-plansearch-config.xml"/>
        <property name="dao" ref="acadSearchableDao"/>
    </bean>
    <bean id="acadSearchableDao"
          class="org.kuali.student.r2.common.dao.impl.SearchableCrudDaoImpl">
        <property name="em" ref="acadEntityManager"/>
    </bean>
    <bean id="acadEntityManager"
          class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="acadEntityManagerFactory"/>
    </bean>
    <bean id="acadEntityManagerFactory" parent="defaultEntityManagerFactory">
        <property name="persistenceUnitName" value="LearningPlan"/>
        <property name="persistenceXmlLocation" value="classpath:META-INF/lp-persistence.xml"/>
        <property name="dataSource" ref="myplanDataSourceXAPool"/>
    </bean>

    <bean id="defaultEntityManagerFactory" abstract="true"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="jpaVendorAdapter">
            <bean
                    class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="${ks.myplan.jpa.DatabasePlatform}"/>
                <property name="showSql" value="${ks.myplan.jpa.showSql}"/>
                <property name="generateDdl" value="${ks.myplan.jpa.generateDdl}"/>
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.transaction.manager_lookup_class"
                       value="${ks.myplan.jpa.JpaProperties.hibernate.transaction.manager_lookup_class}"/>
                <entry key="hibernate.hbm2ddl.auto"
                       value="${ks.myplan.jpa.JpaProperties.hibernate.hbm2ddl.auto}"/>
                <entry key="hibernate.connection.release_mode"
                       value="${ks.myplan.jpa.JpaProperties.hibernate.connection.release_mode}"/>
            </map>
        </property>
    </bean>

    <bean id="myplanDataSourceXAPool"
          class="org.kuali.rice.core.framework.persistence.jdbc.datasource.XAPoolDataSource">
        <property name="transactionManager" ref="transactionManagerXAPool"/>
        <property name="driverClassName" value="${ks.myplan.datasource.driver.name}"/>
        <property name="url" value="${ks.myplan.datasource.url}"/>
        <property name="maxSize" value="${ks.myplan.datasource.maxSize}"/>
        <property name="minSize" value="${ks.myplan.datasource.minSize}"/>
        <property name="maxWait" value="${ks.myplan.datasource.maxWait}"/>
        <property name="validationQuery" value="${ks.myplan.datasource.validationQuery}"/>
        <property name="username" value="${ks.myplan.datasource.username}"/>
        <property name="password" value="${ks.myplan.datasource.password}"/>
    </bean>

    <bean id="transactionManagerXAPool" class="org.springframework.transaction.jta.JotmFactoryBean">
        <property name="defaultTimeout" value="${transaction.timeout}"/>
    </bean>


    <bean id="acadPlanSearchDispatcher"
          class="org.kuali.student.r2.common.class1.search.SearchServiceDispatcherImpl">
        <property name="searchServices">
            <list>
                <ref bean="acadPlanClient"/>
            </list>
        </property>
    </bean>

    <bean id="acadPlanClient"
          class="org.kuali.rice.ksb.messaging.KSBClientProxyFactoryBean">
        <property name="serviceEndpointInterface"
                  value="org.kuali.student.myplan.academicplan.service.AcademicPlanService"/>
        <property name="serviceQName"
                  value="{http://student.kuali.org/wsdl/acadplan}AcademicPlanService"/>
    </bean>


    <bean id="ks.exp.academicPlanService" class="org.kuali.rice.ksb.api.bus.support.ServiceBusExporter">
        <property name="serviceDefinition">
            <bean class="org.kuali.rice.ksb.api.bus.support.SoapServiceDefinition">
                <property name="jaxWsService" value="true"/>
                <property name="service" ref="academicPlanService"/>
                <property name="serviceInterface"
                          value="org.kuali.student.myplan.academicplan.service.AcademicPlanService"/>
                <property name="localServiceName" value="AcademicPlanService"/>
                <property name="serviceNameSpaceURI" value="http://student.kuali.org/wsdl/acadplan"/>
                <property name="busSecurity" value="${ks.lum.bus.security}"/>
            </bean>
        </property>
    </bean>


    <!-- Stuff for uAchieve -->

    <import resource="classpath:uachieve/apis/context/uachieveapi_loaderContext.xml"/>
    <import resource="classpath:uachieve/apis/context/uachieveapi_daoContext.xml"/>
    <import resource="classpath:uachieve/apis/context/uachieveapi_dataAccessContext-local.xml"/>
    <import resource="classpath:uachieve/apis/context/uachieveapi_hibernateContext.xml"/>

    <bean id="uachieve.txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="uachieveapi.sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="uachieve.txManager"/>

    <bean id="degreeAuditService" class="${ks.myplan.degreeAudit.impl}">
        <property name="jobQueueRunLoader" ref="uachieveapi.jobQueueRunLoader"/>
        <property name="jobQueueRunDao" ref="uachieveapi.jobQueueRunDao"/>
        <property name="jobQueueListDao" ref="uachieveapi.jobQueueListDao"/>
        <property name="dprogDao" ref="uachieveapi.dprogDao"/>
        <property name="studentServiceClient" ref="studentServiceClient"/>
    </bean>

    <bean id="ks.exp.degreeAuditService" class="org.kuali.rice.ksb.api.bus.support.ServiceBusExporter">
        <property name="serviceDefinition">
            <bean class="org.kuali.rice.ksb.api.bus.support.SoapServiceDefinition">
                <property name="jaxWsService" value="true"/>
                <property name="service" ref="degreeAuditService"/>
                <property name="serviceInterface"
                          value="org.kuali.student.myplan.audit.service.DegreeAuditService"/>
                <property name="localServiceName" value="DegreeAuditService"/>
                <property name="serviceNameSpaceURI" value="http://student.kuali.org/wsdl/da"/>
                <property name="busSecurity" value="${ks.lum.bus.security}"/>
            </bean>
        </property>
    </bean>

    <!-- Exception mapping. This is needed because many operations are proxied and do not throw exceptions until a later time -->
    <bean id="mapExceptionAdvisor" class="org.kuali.student.common.util.ExceptionMappingAdvice">
        <property name="defaultException" value="org.kuali.student.r2.common.exceptions.OperationFailedException"/>
        <property name="exceptionMapping">
            <map>
                <entry key="javax.persistence.EntityExistsException"
                       value="org.acegisecurity.acls.AlreadyExistsException"/>
                <entry key="org.hibernate.exception.ConstraintViolationException"
                       value="org.acegisecurity.acls.AlreadyExistsException"/>
            </map>
        </property>
    </bean>
    <aop:config>
        <aop:aspect id="dataAccessToBusinessException" ref="mapExceptionAdvisor">
            <aop:after-throwing
                    pointcut="execution(* org.kuali.student.myplan.academicplan.service.AcademicPlanServiceImpl.*(..))"
                    method="afterThrowing" throwing="ex"/>
        </aop:aspect>
    </aop:config>

</beans>